{"data":{"markdownRemark":{"html":"<p>Yes, there are probably thousands of how to’s on <a href=\"https://reactjs.org/docs/hooks-intro.html\">React Hooks</a>, but in this article I’ll try to cover the journey I took to get acquainted with this new technology.\n<em>It is recommended to have a basic understanding of React before moving any further.</em></p>\n<blockquote>\n<p>First of all, React Components - there are two ways of writing them - as <em>functions</em> or as <em>classes</em>.</p>\n</blockquote>\n<p>Until recently, one would use a class when state changes were required, while keeping functions for presentational/dumb wrappers. Of course nobody would admit they use classes everywhere because they’re more convenient or because it’s an easier convention to follow. But functions are becoming cooler anyway, so they’re slowly taking over.</p>\n<p>I’m not just saying it, it’s a fact that</p>\n<ul>\n<li>functions are more performant</li>\n<li><code class=\"language-text\">onClick={handleClick}</code> reads better than <code class=\"language-text\">onClick={this.handleClick.bind(this)}</code></li>\n<li>the simplest implementation possible for taking props and returning HTML is a function</li>\n<li>functions transpile to less code <em>(over 20% or more)</em> than classes</li>\n</ul>\n<p>What is it that makes <em>functional components</em> less respected? I believe that would be the <em>lack of state management</em> and the <em>inexistent lifecycle</em>. And this is where Hooks come into play.</p>\n<blockquote>\n<p>If you want to learn more about the motivation behind the creation of React Hooks, <a href=\"https://reactjs.org/docs/hooks-intro.html#motivation\">this article</a> should explain everything.</p>\n</blockquote>\n<p>Let’s build a simple menu toggler and a homepage animation, slowly intoducing hooks along the way. And when I say simple, I mean inline-styles simple.</p>\n<h2>State management</h2>\n<p>For convenience, I’ve used a basic <a href=\"https://www.gatsbyjs.org\">Gatsby.js</a> starter and created a Navigation class component.</p>\n<p><code class=\"language-text\">src/components/navigation.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Link <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"gatsby\"</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Navigation</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>nav<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token operator\">></span>Home<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/page-2\"</span><span class=\"token operator\">></span>Page <span class=\"token number\">2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>nav<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Navigation</code></pre></div>\n<p><a href=\"https://codesandbox.io/s/github/deioo/hooks-demo/tree/0d1f7a42b9d18585bf1774d6073e8d25719c0628/\">Preview in CodeSandbox</a></p>\n<p>Now for adding a toggle using classes and the standard state approach:</p>\n<p><code class=\"language-text\">src/components/navigation.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Link <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"gatsby\"</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Navigation</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// the initial state</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      showMenu<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function-variable function\">toggleActive</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// toggling the state</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      showMenu<span class=\"token punctuation\">:</span> <span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>showMenu<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>nav<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span><span class=\"token comment\">/* this is where the magic happens */</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">toggleActive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Menu <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>ul\n          style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n            display<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>showMenu <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token string\">`flex`</span></span> <span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`none`</span></span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token operator\">></span>Home<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/page-2\"</span><span class=\"token operator\">></span>Page <span class=\"token number\">2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>nav<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Navigation</code></pre></div>\n<p><a href=\"https://codesandbox.io/s/github/deioo/hooks-demo/tree/958670364fcae37211da78127cea21d0b01c7570/\">Preview in CodeSandbox.</a> <em>It looks prettier too, thank you inline-CSS!</em></p>\n<hr>\n<p>Perfect, let’s refactor this code using functions!</p>\n<p><code class=\"language-text\">src/components/navigation.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Navigation</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>nav<span class=\"token operator\">></span>\n    <span class=\"token operator\">...</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>nav<span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Navigation</code></pre></div>\n<p><a href=\"https://codesandbox.io/s/github/deioo/hooks-demo/tree/0a4198ef6991a32529869ff7a97b8cef1680a0cf/\">Preview in CodeSandbox</a></p>\n<p>At this point we lost the state functionality. Let’s use the <strong>state hook</strong> to bring it back</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Link <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"gatsby\"</span>\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Navigation</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>showMenu<span class=\"token punctuation\">,</span> setShowMenu<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">toggleMenu</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setShowMenu</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>showMenu<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>nav<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>toggleMenu<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Menu <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>ul\n        style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n          display<span class=\"token punctuation\">:</span> showMenu <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token string\">`flex`</span></span> <span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`none`</span></span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token operator\">></span>Home<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/page-2\"</span><span class=\"token operator\">></span>Page <span class=\"token number\">2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>nav<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Navigation</code></pre></div>\n<p><a href=\"https://codesandbox.io/s/github/deioo/hooks-demo/tree/e4774f3d46b547c993bab4827b1151e0701fdc91/\">Preview in CodeSandbox</a></p>\n<p>Is this what all the hype is about? What is our new code doing?</p>\n<ul>\n<li>we have a <code class=\"language-text\">showMenu</code> which acts as a getter and a <code class=\"language-text\">setShowMenu</code> which is a setter function.</li>\n<li>the initial value for <code class=\"language-text\">showMenu</code> is passed to the <code class=\"language-text\">useState</code> hook function as a param. If we need multiple states, the recommended way is to just <a href=\"https://reactjs.org/docs/hooks-state.html#tip-using-multiple-state-variables\">create another <code class=\"language-text\">useState</code> hook</a>.</li>\n</ul>\n<p>If more complex state objects are required, it can be done as well, as detailed here:\n<a href=\"https://reactjs.org/docs/hooks-faq.html#should-i-use-one-or-many-state-variables\">https://reactjs.org/docs/hooks-faq.html#should-i-use-one-or-many-state-variables</a></p>\n<blockquote>\n<p>To me, the whole concept was not hard to understand and the code feels cleaner and more readable. And you don’t have to refactor classes to functions and functions to classes anymore every time a component changes scope.</p>\n</blockquote>\n<p>Some argue this approach makes functions impure, which is true. So I guess using hooks depends a lot on a project’s implementation guidelines / best practice and what it’s trying to achieve.\nIf it’s just a matter of readability, more complex functionality can be extracted in custom hooks <em>(as we’re going to see below)</em> and kept as separate concerns.</p>\n<p><em>So far I couldn’t find a case where hooks failed to deliver the desired functionality, but feel free to change my mind with an example.</em></p>\n<p>Getting back to our project, when we go from one page to another, we can see the state is lost. Let’s see what we can do to persist it.</p>\n<p><em>Gatsby has it’s own internals to allow passing in props between routes (using - you guessed, Redux), but this post is not about Gatsby, so we’re going to create our own thing.</em></p>\n<p>The idea is to write some code that pushes a key/value to localStorage. Or steal one from the internet, whatever is more convenient.</p>\n<blockquote>\n<p>A great set of custom hooks can be found on <a href=\"https://usehooks.com\">https://usehooks.com</a></p>\n</blockquote>\n<p>Let’s use it with our navigation component.</p>\n<p><code class=\"language-text\">src/components/navigation.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Link <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"gatsby\"</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> useLocalStorage <span class=\"token keyword\">from</span> <span class=\"token string\">\"../hooks/useLocalStorage\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Navigation</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>showMenu<span class=\"token punctuation\">,</span> setShowMenu<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useLocalStorage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"showMenu\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">toggleMenu</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setShowMenu</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>showMenu<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>nav<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>toggleMenu<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Menu <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>ul\n        style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n          display<span class=\"token punctuation\">:</span> showMenu <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token string\">`flex`</span></span> <span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`none`</span></span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token operator\">></span>Home<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/page-2\"</span><span class=\"token operator\">></span>Page <span class=\"token number\">2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>nav<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Navigation</code></pre></div>\n<p><a href=\"https://codesandbox.io/s/github/deioo/hooks-demo/tree/609ce91e314050e2c5339b89fc27aa34bdfd4a17/\">Preview in CodeSandbox</a></p>\n<p>Now the menu toggle is persisted between pages and also on refresh, that’s great! So what exactly is our custom hook doing?</p>\n<p>It has the exact same format as the <code class=\"language-text\">useState</code> hook, being comprised of a getter and a setter, where the setter updates localStorage, while the getter fetches the value from localStorage:</p>\n<p><code class=\"language-text\">src/hooks/useLocalStorage.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>storedValue<span class=\"token punctuation\">,</span> setStoredValue<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// the getter</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Get from local storage by key</span>\n    <span class=\"token keyword\">const</span> item <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// Parse stored json or if none return initialValue</span>\n    <span class=\"token keyword\">return</span> item <span class=\"token operator\">?</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> initialValue\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// If error also return initialValue</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> initialValue\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// the setter</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">setValue</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">value</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Allow value to be a function so we have same API as useState</span>\n    <span class=\"token keyword\">const</span> valueToStore <span class=\"token operator\">=</span> value <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Function</span> <span class=\"token operator\">?</span> <span class=\"token function\">value</span><span class=\"token punctuation\">(</span>storedValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> value\n    <span class=\"token comment\">// Save state</span>\n    <span class=\"token function\">setStoredValue</span><span class=\"token punctuation\">(</span>valueToStore<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// Save to local storage</span>\n    window<span class=\"token punctuation\">.</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>valueToStore<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// A more advanced implementation would handle the error case</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>storedValue<span class=\"token punctuation\">,</span> setValue<span class=\"token punctuation\">]</span></code></pre></div>\n<p>In a nutshell, that’s state management with functional components and hooks.</p>\n<h2>Component lifecycle</h2>\n<p>Let’s consider the scenario where we want to create an animated component that must run some code after the component gets rendered for example. With classes one would use <code class=\"language-text\">componentWillMount()</code> or <code class=\"language-text\">componentDidMount()</code>. Let’s see what we can do with a function:</p>\n<p>First, pass a prop to the header component from <code class=\"language-text\">Layout</code> on the index page, then run some code if <code class=\"language-text\">isIndex</code> is true.</p>\n<p><a href=\"https://github.com/deioo/hooks-demo/commit/c98e34129f9c2d06848c314bb90f5aeb6fc56df9\">Check out the code diff on Github</a> | <a href=\"https://codesandbox.io/s/github/deioo/hooks-demo/tree/c98e34129f9c2d06848c314bb90f5aeb6fc56df9/\">Preview in CodeSandbox</a></p>\n<p>This implementation kind of works. Clicking the menu button shows the navigation items, it doesn’t break between pages, but is this really a good implementation in this case, does it have any flaws? For example if you click a menu item twice, the functional component gets called again, so the animation restarts. Let’s fix that.</p>\n<p>We’re going to implement another hook, called <code class=\"language-text\">useEffect</code> to fix the issues above and more.</p>\n<p><code class=\"language-text\">src/components/header.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Link <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"gatsby\"</span>\n<span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">\"prop-types\"</span>\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> anime <span class=\"token keyword\">from</span> <span class=\"token string\">\"animejs\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Header</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> siteTitle<span class=\"token punctuation\">,</span> isIndex <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> timeline <span class=\"token operator\">=</span> anime<span class=\"token punctuation\">.</span><span class=\"token function\">timeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        easing<span class=\"token punctuation\">:</span> <span class=\"token string\">\"easeOutQuad\"</span><span class=\"token punctuation\">,</span>\n        duration<span class=\"token punctuation\">:</span> <span class=\"token number\">750</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n      timeline<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        targets<span class=\"token punctuation\">:</span> <span class=\"token string\">\".header\"</span><span class=\"token punctuation\">,</span>\n        opacity<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n      timeline<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        targets<span class=\"token punctuation\">:</span> <span class=\"token string\">\".headerTitle\"</span><span class=\"token punctuation\">,</span>\n        translateX<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"20%\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        opacity<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>header\n      className<span class=\"token operator\">=</span><span class=\"token string\">\"header\"</span>\n      style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n        background<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`rebeccapurple`</span></span><span class=\"token punctuation\">,</span>\n        marginBottom<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`1.45rem`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div\n        style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n          margin<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`0 auto`</span></span><span class=\"token punctuation\">,</span>\n          maxWidth<span class=\"token punctuation\">:</span> <span class=\"token number\">960</span><span class=\"token punctuation\">,</span>\n          padding<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`1.45rem 1.0875rem`</span></span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>h1 className<span class=\"token operator\">=</span><span class=\"token string\">\"headerTitle\"</span> style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> margin<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Link\n            to<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span>\n            style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n              color<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`white`</span></span><span class=\"token punctuation\">,</span>\n              textDecoration<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`none`</span></span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">></span>\n            <span class=\"token punctuation\">{</span>siteTitle<span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token string\">` `</span></span><span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">{</span>isIndex <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token string\">`index page`</span></span> <span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`secondary page`</span></span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>header<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nHeader<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  siteTitle<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">,</span>\n  isIndex<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>bool<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\nHeader<span class=\"token punctuation\">.</span>defaultProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  siteTitle<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">``</span></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Header</code></pre></div>\n<p><a href=\"https://codesandbox.io/s/github/deioo/hooks-demo/tree/c257c3df6de01a1b7725d465314cb064f1ef8c11/\">Preview in CodeSandbox</a></p>\n<p>We wrapped our animation in this function that’s going to be executed when the component gets mounted. Then, to fix this bug where clicking the same link twice restarts the animation, we’re just going to execute the code inside the hook <strong>only when <code class=\"language-text\">isIndex</code> is changing</strong>.</p>\n<p>Passing a second param to <code class=\"language-text\">useEffect(() =&gt; { ... },[propertyName])</code> is allowing us to run that effect only when <code class=\"language-text\">propertyName</code> gets updated. Pretty neat.</p>\n<p>With a bit more tweaking we ended up with a togglable menu and an animated index page header, exactly what we were set out to do.</p>\n<iframe src=\"https://codesandbox.io/embed/gatsby-starter-default-hx96t?fontsize=14&hidenavigation=1\" title=\"gatsby-starter-default\" allow=\"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media\" style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\" sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"></iframe>\n<h2>Conclusion</h2>\n<p>This is the most basic functionality you can get out of hooks. It only gets better when you want to <a href=\"https://www.robinwieruch.de/react-hooks-fetch-data/\">fetch data</a>, work with eventListeners or just want to <a href=\"https://usehooks.com/useDarkMode/\">switch to dark mode</a>. One can now write functional components everywhere instead of toggling between class/functions and tap into state management or component lifecycle without maintaining two different code conventions in the same codebase.</p>\n<p>The API offers other hooks, not just <code class=\"language-text\">useState</code> and <code class=\"language-text\">useEffect</code>. Check out the whole set here: <a href=\"https://reactjs.org/docs/hooks-reference.html\">https://reactjs.org/docs/hooks-reference.html</a>.</p>\n<p>If you have any questions or comments, or if you find this absolutely useless, please start a discussion using the section below. Thank you!</p>","fields":{"slug":"/blog/react-hooks/"},"frontmatter":{"date":"July 13, 2019","title":"React Hooks I (finally) Understand","subtitles":null,"author":"Andrei Popa","short_description":"An introduction to React Hooks with examples","hidden":true}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blog/react-hooks/","prev":null,"next":{"fileAbsolutePath":"/Users/andreipopa/Work/Featurist/featurist-site-2019/src/data/blog/mithril-vs-hyperdom/index.md","fields":{"slug":"/blog/mithril-vs-hyperdom/"},"frontmatter":{"title":"Mithril vs Hyperdom"}}}}