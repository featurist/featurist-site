{"version":3,"sources":["webpack:///./src/pages/blog.jsx","webpack:///./src/elements/Button.jsx"],"names":["SectionWrapper","styled","Inner","withConfig","displayName","componentId","SectionContainer","div","PostTitle","span","display","marginTop","SectionHeader","H3","marginBottom","color","Separator","width","backgroundColor","height","marginLeft","marginRight","SectionContents","flexDirection","Title","P","textTransform","Section","_ref","children","props","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0___default","title","date","author","slug","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_LinkTo__WEBPACK_IMPORTED_MODULE_6__","href","_elements_Text__WEBPACK_IMPORTED_MODULE_12__","propTypes","PropTypes","node","isRequired","string","BlogPage","gatsby__WEBPACK_IMPORTED_MODULE_5__","query","render","data","_components_layout__WEBPACK_IMPORTED_MODULE_7__","_components_seo__WEBPACK_IMPORTED_MODULE_8__","_views_AppWrapper__WEBPACK_IMPORTED_MODULE_9__","_views_Hero__WEBPACK_IMPORTED_MODULE_11__","isDark","isBlog","style","zIndex","_elements_Content__WEBPACK_IMPORTED_MODULE_10__","condensed","allMarkdownRemark","edges","map","_ref2","i","key","frontmatter","fields","short_description","_elements_Button__WEBPACK_IMPORTED_MODULE_13__","_public_static_d_666958065_json__WEBPACK_IMPORTED_MODULE_1__","styled_components__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","Button","button",":hover","borderColor","borderWidth","borderStyle","borderRadius","cursor","fontSize","@media (min-width: 1200px)","fontWeight","paddingTop","paddingBottom","paddingLeft","paddingRight"],"mappings":"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","file":"component---src-pages-blog-jsx-9079d0cefa87b0ebe494.js","sourcesContent":["/* eslint-disable react/forbid-prop-types */\n/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/no-unescaped-entities */\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport tw from \"tailwind.macro\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport LinkTo from \"../components/LinkTo\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport AppWrapper from \"../views/AppWrapper\"\nimport Content, { Inner } from \"../elements/Content\"\nimport Hero from \"../views/Hero\"\nimport { BigTitleLight, H3, Strong, P, PLight } from \"../elements/Text\"\nimport Button from \"../elements/Button\"\n\nconst SectionWrapper = styled(Inner)``\n\nconst SectionContainer = styled.div`\n  ${tw``}\n`\n\nconst PostTitle = styled.span`\n  ${tw`block mt-4`};\n`\n\nconst SectionHeader = styled(H3)`\n  ${tw`mb-0`};\n\n  &:hover {\n    ${PostTitle} {\n      ${tw`text-grey-darker`};\n    }\n  }\n`\n\nconst Separator = styled.span`\n  ${tw`w-full bg-grey-light h-px mx-auto my-6 block`};\n`\n\nconst SectionContents = styled.div`\n  ${tw`flex flex-col`};\n`\n\nconst Title = styled(P)`\n  ${tw`mt-0 mb-0 text-grey normal-case`};\n`\n\nconst Section = ({ children, ...props }) => {\n  const { title, date, author, slug } = props\n\n  return (\n    <SectionContainer>\n      <SectionHeader>\n        <LinkTo href={slug}>\n          <PostTitle>{title}</PostTitle>\n        </LinkTo>\n      </SectionHeader>\n      <Title>\n        By <Strong>{author}</Strong> on <Strong>{date}</Strong>\n      </Title>\n      <SectionContents>{children}</SectionContents>\n      <Separator />\n    </SectionContainer>\n  )\n}\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n}\n\nconst BlogPage = () => (\n  <StaticQuery\n    query={graphql`\n      query ListBlogQuery {\n        allMarkdownRemark(\n          filter: {\n            fileAbsolutePath: { regex: \"/(blog)/\" }\n            frontmatter: { hidden: { ne: true } }\n          }\n          sort: { order: DESC, fields: [frontmatter___date] }\n        ) {\n          edges {\n            node {\n              fields {\n                slug\n              }\n              frontmatter {\n                date(formatString: \"MMMM Do YYYY\")\n                title\n                author\n                short_description\n                hidden\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      return (\n        <Layout>\n          <SEO title=\"The Featurist Blog\" />\n          <AppWrapper>\n            <Hero isDark isBlog style={{ zIndex: 20 }}>\n              <BigTitleLight>Blog</BigTitleLight>\n              <PLight />\n            </Hero>\n            <Content>\n              <SectionWrapper condensed>\n                {data.allMarkdownRemark.edges.map(({ node }, i) => {\n                  return (\n                    <Section\n                      key={`blog-post-${i}`}\n                      title={node.frontmatter.title}\n                      author={node.frontmatter.author}\n                      date={node.frontmatter.date}\n                      slug={node.fields.slug}\n                    >\n                      <P>{node.frontmatter.short_description}</P>\n                      <LinkTo href={node.fields.slug}>\n                        <Button>Read More</Button>\n                      </LinkTo>\n                    </Section>\n                  )\n                })}\n              </SectionWrapper>\n            </Content>\n          </AppWrapper>\n        </Layout>\n      )\n    }}\n  />\n)\n\nexport default BlogPage\n","import styled from \"styled-components\"\nimport tw from \"tailwind.macro\"\n// import { Link } from \"gatsby\";\n\nconst Button = styled.button`\n  ${tw`bg-transparent hover:bg-pink border border-solid hover:border-transparent rounded cursor-pointer`};\n  ${tw`text-base xl:text-lg font-semibold py-4 px-8`};\n  ${tw`border-grey text-grey-darkest hover:text-white`}\n`\n\nconst ButtonLight = styled(Button)`\n  ${tw`border-white text-grey-lightest`}\n`\n\nexport default Button\nexport { ButtonLight }\n"],"sourceRoot":""}