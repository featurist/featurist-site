{"version":3,"sources":["webpack:///./src/pages/blog.jsx"],"names":["SectionWrapper","styled","Inner","SectionContainer","div","PostTitle","span","SectionHeader","H2","Separator","SectionContents","Title","P","Section","children","props","title","author","slug","readingTime","href","BlogPage","query","render","data","isDark","isBlog","style","zIndex","condensed","allMarkdownRemark","edges","map","i","node","key","frontmatter","date","fields","text","short_description"],"mappings":"yOAiBA,IAAMA,EAAiBC,YAAOC,KAAV,uEAAGD,CAAH,MAEdE,EAAmBF,IAAOG,IAAV,yEAAGH,CAAH,YAIhBI,EAAYJ,IAAOK,KAAV,kEAAGL,CAAH,6CAITM,EAAgBN,YAAOO,KAAV,sEAAGP,CAAH,6BAIbQ,EAAYR,IAAOK,KAAV,kEAAGL,CAAH,8JAITS,EAAkBT,IAAOG,IAAV,wEAAGH,CAAH,kDAIfU,EAAQV,YAAOW,KAAV,8DAAGX,CAAH,2DAILY,EAAU,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAaC,E,oIAAY,iBAClCC,EAAqCD,EAArCC,MAAOC,EAA8BF,EAA9BE,OAAQC,EAAsBH,EAAtBG,KAAMC,EAAgBJ,EAAhBI,YAE7B,OACE,kBAAChB,EAAD,KACE,kBAACI,EAAD,KACE,kBAAC,IAAD,CAAQa,KAAMF,GACZ,kBAACb,EAAD,KAAYW,KAGhB,kBAACL,EAAD,WACK,kBAAC,IAAD,KAASM,GADd,MACkCE,GAElC,kBAACT,EAAD,KAAkBI,GAClB,kBAACL,EAAD,QAkFSY,UApEE,kBACf,kBAAC,IAAD,CACEC,MAAK,aA6BLC,OAAQ,SAAAC,GACN,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKR,MAAM,uBACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMS,QAAM,EAACC,QAAM,EAACC,MAAO,CAAEC,OAAQ,KACnC,kBAAC,IAAD,aACA,kBAAC,IAAD,OAEF,kBAAC,IAAD,KACE,kBAAC5B,EAAD,CAAgB6B,WAAS,GACtBL,EAAKM,kBAAkBC,MAAMC,KAAI,WAAWC,GAAO,IAAfC,EAAc,EAAdA,KACnC,OACE,kBAACrB,EAAD,CACEsB,IAAG,aAAeF,EAClBjB,MAAOkB,EAAKE,YAAYpB,MACxBC,OAAQiB,EAAKE,YAAYnB,OACzBoB,KAAMH,EAAKE,YAAYC,KACvBnB,KAAMgB,EAAKI,OAAOpB,KAClBC,YAAae,EAAKI,OAAOnB,YAAYoB,MAErC,kBAAC,IAAD,KAAIL,EAAKE,YAAYI,mBACrB,kBAAC,IAAD,CAAQpB,KAAMc,EAAKI,OAAOpB,MACxB,kBAAC,IAAD,4BArDtB,W","file":"component---src-pages-blog-jsx-d90acac479b546d1b698.js","sourcesContent":["/* eslint-disable react/forbid-prop-types */\n/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/no-unescaped-entities */\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport tw from \"tailwind.macro\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport LinkTo from \"../components/LinkTo\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport AppWrapper from \"../views/AppWrapper\"\nimport Content, { Inner } from \"../elements/Content\"\nimport Hero from \"../views/Hero\"\nimport { BigTitleLight, H2, Strong, P, PLight } from \"../elements/Text\"\nimport Button from \"../elements/Button\"\n\nconst SectionWrapper = styled(Inner)``\n\nconst SectionContainer = styled.div`\n  ${tw``}\n`\n\nconst PostTitle = styled.span`\n  ${tw`block mt-4`};\n`\n\nconst SectionHeader = styled(H2)`\n  ${tw`mb-0`};\n`\n\nconst Separator = styled.span`\n  ${tw`w-full bg-grey-light h-px mx-auto my-6 block`};\n`\n\nconst SectionContents = styled.div`\n  ${tw`flex flex-col`};\n`\n\nconst Title = styled(P)`\n  ${tw`mt-0 mb-0 text-grey-dark`};\n`\n\nconst Section = ({ children, ...props }) => {\n  const { title, author, slug, readingTime } = props\n\n  return (\n    <SectionContainer>\n      <SectionHeader>\n        <LinkTo href={slug}>\n          <PostTitle>{title}</PostTitle>\n        </LinkTo>\n      </SectionHeader>\n      <Title>\n        By <Strong>{author}</Strong> â€¢ {readingTime}\n      </Title>\n      <SectionContents>{children}</SectionContents>\n      <Separator />\n    </SectionContainer>\n  )\n}\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  readingTime: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n}\n\nconst BlogPage = () => (\n  <StaticQuery\n    query={graphql`\n      query ListBlogQuery {\n        allMarkdownRemark(\n          filter: {\n            fileAbsolutePath: { regex: \"/(blog)/\" }\n            frontmatter: { hidden: { ne: true } }\n          }\n          sort: { order: DESC, fields: [frontmatter___date] }\n        ) {\n          edges {\n            node {\n              fields {\n                slug\n                readingTime {\n                  text\n                }\n              }\n              frontmatter {\n                date(formatString: \"MMMM Do YYYY\")\n                title\n                author\n                short_description\n                hidden\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      return (\n        <Layout>\n          <SEO title=\"The Featurist Blog\" />\n          <AppWrapper>\n            <Hero isDark isBlog style={{ zIndex: 20 }}>\n              <BigTitleLight>Blog</BigTitleLight>\n              <PLight />\n            </Hero>\n            <Content>\n              <SectionWrapper condensed>\n                {data.allMarkdownRemark.edges.map(({ node }, i) => {\n                  return (\n                    <Section\n                      key={`blog-post-${i}`}\n                      title={node.frontmatter.title}\n                      author={node.frontmatter.author}\n                      date={node.frontmatter.date}\n                      slug={node.fields.slug}\n                      readingTime={node.fields.readingTime.text}\n                    >\n                      <P>{node.frontmatter.short_description}</P>\n                      <LinkTo href={node.fields.slug}>\n                        <Button>Read More</Button>\n                      </LinkTo>\n                    </Section>\n                  )\n                })}\n              </SectionWrapper>\n            </Content>\n          </AppWrapper>\n        </Layout>\n      )\n    }}\n  />\n)\n\nexport default BlogPage\n"],"sourceRoot":""}