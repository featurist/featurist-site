{"version":3,"sources":["webpack:///./src/pages/imd.jsx","webpack:///./src/elements/CloseIcon.jsx"],"names":["SectionWrapper","styled","Container","withConfig","displayName","componentId","paddingTop","paddingBottom","CloseWrapper","div","@media (min-width: 600px)","position","Section","_ref","children","props","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0___default","title","style","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_elements_Content__WEBPACK_IMPORTED_MODULE_6__","_elements_Text__WEBPACK_IMPORTED_MODULE_10__","IMD","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","_views_AppWrapper__WEBPACK_IMPORTED_MODULE_5__","_views_Hero__WEBPACK_IMPORTED_MODULE_8__","isDark","opacity","_components_LinkTo__WEBPACK_IMPORTED_MODULE_7__","href","_elements_CloseIcon__WEBPACK_IMPORTED_MODULE_9__","backgroundColor","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","styled_components__WEBPACK_IMPORTED_MODULE_1__","Wrapper","svg","Circle","circle","CloseIcon","viewBox","cx","cy","r","fill","stroke","strokeWidth","d"],"mappings":"uNAsBMA,EAAiBC,YAAOC,KAAVC,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAGJ,CAAH,SAAAK,WAAA,OAAAC,cAAA,SAIdC,EAAeP,IAAOQ,IAAVN,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAGJ,CAAH,0BAAAS,4BAAA,CAAAC,SAAA,cAMZC,EAAU,SAAAC,GAA4B,IAAzBC,EAAyBD,EAAzBC,SAAaC,EAAYC,IAAAH,EAAA,cAClCI,EAAiBF,EAAjBE,MAAOC,EAAUH,EAAVG,MAEf,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaJ,MAAOA,GAClBC,EAAAC,EAAAC,cAACrB,EAAD,KACEmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KAAKN,GACJH,MAmHIU,UA5GH,kBACVL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKT,MAAM,QACXE,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,QAAM,GACVV,EAAAC,EAAAC,cAACb,EAAD,CAAcU,MAAO,CAAEY,QAAS,IAC9BX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQC,KAAK,KACXb,EAAAC,EAAAC,cAACY,EAAA,EAAD,QAIJd,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASL,MAAO,CAAEY,QAAS,IAA3B,OACMX,EAAAC,EAAAC,cAACE,EAAA,EAAD,yBAENJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQL,MAAO,CAAEY,QAAS,IACxBX,EAAAC,EAAAC,cAACE,EAAA,EAAD,kGAGiB,IAJnB,wIAUFJ,EAAAC,EAAAC,cAACT,EAAD,CAASK,MAAM,cACbE,EAAAC,EAAAC,cAACE,EAAA,EAAD,wKAKAJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,6IAIAJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,6zBAeFJ,EAAAC,EAAAC,cAACT,EAAD,CAASK,MAAM,2BAA2BC,MAAK,CAAAgB,gBAAA,YAC7Cf,EAAAC,EAAAC,cAACE,EAAA,EAAD,2kBAWAJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,46BAiBFJ,EAAAC,EAAAC,cAACT,EAAD,CAASK,MAAM,oBACbE,EAAAC,EAAAC,cAACE,EAAA,EAAD,snBAYAJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,6rBC1IR,IAAAY,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAIMI,EAAUvC,IAAOwC,IAAVtC,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAGJ,CAAH,4EAUPyC,EAASzC,IAAO0C,OAAVxC,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAGJ,CAAH,6FAsBG2C,IAhBG,kBAChBP,EAAAjB,EAAAC,cAACmB,EAAD,CAASK,QAAQ,aACfR,EAAAjB,EAAAC,cAACqB,EAAD,CACEI,GAAG,KACHC,GAAG,KACHC,EAAE,KACFC,KAAK,OACLC,OAAO,eACPC,YAAY,SAEdd,EAAAjB,EAAAC,cAAA,KAAG4B,KAAK,OAAOC,OAAO,eAAeC,YAAY,QAC/Cd,EAAAjB,EAAAC,cAAA,QAAM+B,EAAE","file":"component---src-pages-imd-jsx-2b7b5c7f37b60fba5dca.js","sourcesContent":["/* eslint-disable react/prop-types */\n/* eslint-disable react/no-unescaped-entities */\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport tw from \"tailwind.macro\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport AppWrapper from \"../views/AppWrapper\"\nimport { Container, ContentFull, Inner } from \"../elements/Content\"\nimport LinkTo from \"../components/LinkTo\"\nimport Hero from \"../views/Hero\"\nimport CloseIcon from \"../elements/CloseIcon\"\nimport {\n  H1Light,\n  H3,\n  P,\n  PLight,\n  Highlight,\n  WrapTextBlock,\n} from \"../elements/Text\"\n\n// TODO: reuse these templates between case studies\nconst SectionWrapper = styled(Container)`\n  ${tw`py-12`}\n`\n\nconst CloseWrapper = styled.div`\n  ${tw`md:absolute`};\n  right: 2%;\n  top: 2%;\n`\n\nconst Section = ({ children, ...props }) => {\n  const { title, style } = props\n\n  return (\n    <ContentFull style={style}>\n      <SectionWrapper>\n        <Inner>\n          <H3>{title}</H3>\n          {children}\n        </Inner>\n      </SectionWrapper>\n    </ContentFull>\n  )\n}\n\nconst IMD = () => (\n  <Layout>\n    <SEO title=\"IMD\" />\n    <AppWrapper>\n      <Hero isDark>\n        <CloseWrapper style={{ opacity: 0 }}>\n          <LinkTo href=\"/\">\n            <CloseIcon />\n          </LinkTo>\n        </CloseWrapper>\n\n        <H1Light style={{ opacity: 0 }}>\n          IMD <Highlight>Business School</Highlight>\n        </H1Light>\n        <PLight style={{ opacity: 0 }}>\n          <WrapTextBlock>\n            IMD are the experts in developing global leaders through high-impact\n            executive education.\n          </WrapTextBlock>{\" \"}\n          By combining online collaborative learning they are able to deliver a\n          unique, personalised learning experience to business leaders.\n        </PLight>\n      </Hero>\n\n      <Section title=\"Background\">\n        <P>\n          Featurist were chosen by IMD to rebuild their mobile and web platforms\n          for delivery of high quality business course material between October\n          2013 - April 2015.\n        </P>\n        <P>\n          Our work at IMD has covered the full spectrum of product development,\n          from sharp user experiences to flexible server infrastructure.\n        </P>\n        <P>\n          IMD approached Featurist to build the next generation of learning apps\n          to further enhance their learning platform. IMD had already innovated\n          in producing an iPad app that allowed delegates to view course\n          material and interact with other participants. Featurist were able to\n          help IMD enhance this experience by adding support for a wider variety\n          of course material such as videos, questionnaires and forums, and\n          allowing participants to do this on the web or iPad in their own time\n          or on IMD campuses. Furthermore, Featurist helped IMD improve the\n          process of building and running online courses, in particular by\n          making it easier to repurpose previously created coursework. Featurist\n          also introduced a publishing workflow to allow IMD to create, edit and\n          preview coursework without impacting currently published courses.\n        </P>\n      </Section>\n      <Section title=\"Technical Implementation\" style={tw`bg-grey-lightest`}>\n        <P>\n          Featurist converted an iOS iPad app, principally developed in\n          Objective-C, into a hybrid app using AngularJS and CouchDB - this\n          allowed us to quickly iterate on UI improvements and simultaneously\n          port the application to the web, an added benefit was that we were\n          able to more easily write and maintain automated tests for the\n          web-based user interfaces and release more frequently. We wrote a web\n          API in C# that helped us to integrate with their legacy learning\n          portal, using automated tests that ensured that the API behaved in\n          accordance with the content found in the database.\n        </P>\n        <P>\n          One of the primary issues IMD had to solve was to be able to preview\n          new and modified course material ahead of it being published to\n          students, something they were previously unable to do. To solve this,\n          Featurist developed a new course editing platform that used Git as a\n          content store, allowing us to publish one version while working on and\n          previewing another. We could import content from their legacy learning\n          portal that had been curated for historical courses. Content editors\n          could then view and edit content, preview or publish it for students.\n          We used CouchDB to help replicate content from the web site to iPad\n          clients. The UI for the editor was built using Plastiq (now known as\n          hyperdom. The server was built using Node JS and we leaned heavily on\n          node-libgit and PouchDB. For deployment into their on-premises data\n          centre we used linux nodes running docker and scripts using the docker\n          API to automate the deployment.\n        </P>\n      </Section>\n      <Section title=\"Testing Approach\">\n        <P>\n          During the course of the development Featurist developed cutting edge\n          methods of testing single page applications. Performance limitations\n          in AngularJS meant that we had to develop parts of the application\n          using regular jQuery methods and this made it impossible to write fast\n          UI tests that assumed an AngularJS architecture of controllers and\n          dependency injection. For this reason we developed technology that\n          emulated user behaviour and asserted that the UI and API responded\n          accordingly, regardless of framework. This technology was subsequently\n          refined and eventually evolved into what we use today as Browser\n          Monkey.\n        </P>\n        <P>\n          Another problem we solved at IMD was for testing the SQL queries we\n          wrote when interacting with their legacy database. A large part of the\n          problem was in setting up enough scenarios to adequately test the\n          queries, and for this, inserting large models with complex foreign key\n          relationships into the database before the queries were run. We did\n          this by building Sworm, which allowed us to specify the models as\n          maintainable object graphs in Node JS, and then save them to the\n          database with their relationships intact. Sworm has continued to help\n          us with our clients since then and has adapters for Microsoft SQL\n          Server, Oracle, Postgres, SQLite and MySQL.\n        </P>\n      </Section>\n    </AppWrapper>\n  </Layout>\n)\n\nexport default IMD\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport tw from \"tailwind.macro\"\n\nconst Wrapper = styled.svg`\n  ${tw``};\n  width: 142px;\n  height: 142px;\n\n  &:hover > circle {\n    stroke-dashoffset: 0;\n  }\n`\n\nconst Circle = styled.circle`\n  stroke-dasharray: 100;\n  stroke-dashoffset: 100;\n  transition: stroke-dashoffset 0.35s ease-out;\n`\n\nconst CloseIcon = () => (\n  <Wrapper viewBox=\"0 0 24 24\">\n    <Circle\n      cx=\"12\"\n      cy=\"12\"\n      r=\"11\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"0.75\"\n    />\n    <g fill=\"none\" stroke=\"currentColor\" strokeWidth=\"0.55\">\n      <path d=\"M6.643 6.643l10.714 10.714M6.643 17.357L17.357 6.643\" />\n    </g>\n  </Wrapper>\n)\n\nexport default CloseIcon\n"],"sourceRoot":""}