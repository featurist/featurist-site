{"componentChunkName":"component---src-templates-blog-jsx","path":"/blog/progressive-enhancement-in-rails/","webpackCompilationHash":"bad095c19ba622305a38","result":{"data":{"markdownRemark":{"html":"<p>Rails is a server side framework for building web applications. It gained prominence back when JavaScript was merely a pixi dust, sprinkled upon the server side generated html. The world has since moved on. SPAs are considered by many a default - if not the only sensible - way to generate web pages.</p>\n<p>Rails has been pretty accommodating to this shift. Out of the box, <a href=\"https://github.com/turbolinks/turbolinks\" target=\"_blank\" rel=\"nofollow\">Turbolinks</a> and <a href=\"https://guides.rubyonrails.org/working_with_javascript_in_rails.html#unobtrusive-javascript\" target=\"_blank\" rel=\"nofollow\">UJS</a> magically turn on the SPA glamour. Alternatively, bolting in a pure frontend tech such as React on top of Rails is only a single command away. Still, a default Rails site can function in a browser with no JavaScript. Turbolinks navigation gracefully fall back to the full page reload (no extra code required); remote forms and links fall back to their non-ajax versions, with a well defined <code class=\"language-text\">respond_to</code> API to handle the server side. Looking at it from the other end, Rails upgrades the UX for more advanced clients. Which is what progressive enhancement is all about.</p>\n<p>This is mildly impressive but, let’s face it, in an era of JavaScript dominance it sounds a bit… academic. Most of the web only works with JavaScript, so why would the users of the web care? They don’t. The vast majority of them anyway. Web developers on the other hand, we can get something out of it.</p>\n<p>What is there to get out of keeping web apps functional without JavaScript? There is an overarching answer: single stack architecture - that is, when all coding happens in a single tech stack, e.g. Rails - is inherently simpler and more productive environment. I am not, however, going to dwell on that one. Instead, here is a different pitch: fast tests.</p>\n<p>Web applications have tests. Some of them are “full stack” tests that drive the application through the UI. Naturally those tests use a web browser. However, if the UI does not require JavaScript, then the tests, technically, don’t need a real browser - they can be run by simply analyzing the html produced by the app. And, in case of Rails, without even starting a web server (by plugging directly into controllers output).</p>\n<p>When run like this, Rails system tests are much faster. 2x and onwards faster based on my anecdotal evidence. They are also less flaky and easier to debug, since the entire stack runs in a single ruby process (no extra browser process).</p>\n<p>This is all very exciting, but in reality there is likely to be some legitimate JavaScript in your Rails app and there is simply no getting away from it. But that’s ok. So long as pockets of JavaScript are kept contained, the above applies.</p>\n<p>The rest of this post looks into ways to have your cake (client-side JavaScript) and eat it (fast, non JavaScript test coverage).</p>\n<p>But first we need to turn on the fast tests.</p>\n<h2 id=\"system-tests\"><a href=\"#system-tests\" aria-label=\"system tests permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>System tests</h2>\n<p>Out of the box, Rails 6 system tests pop up a Chrome browser (<code class=\"language-text\">test/application_system_test_case.rb</code>):</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">require</span> <span class=\"token string\">\"test_helper\"</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ApplicationSystemTestCase</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ActionDispatch</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">SystemTestCase</span>\n  driven_by <span class=\"token symbol\">:selenium</span><span class=\"token punctuation\">,</span> using<span class=\"token punctuation\">:</span> <span class=\"token symbol\">:chrome</span><span class=\"token punctuation\">,</span> screen_size<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1400</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<h3 id=\"headless-chrome\"><a href=\"#headless-chrome\" aria-label=\"headless chrome permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Headless Chrome</h3>\n<p>The browser window flashing is a distraction so the first thing to do is to switch to headless mode by default (rails also registers <code class=\"language-text\">:headless_chrome</code> driver):</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">require</span> <span class=\"token string\">'test_helper'</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ApplicationSystemTestCase</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ActionDispatch</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">SystemTestCase</span>\n  driven_by <span class=\"token symbol\">:selenium</span><span class=\"token punctuation\">,</span> using<span class=\"token punctuation\">:</span> <span class=\"token constant\">ENV</span><span class=\"token punctuation\">[</span><span class=\"token string\">'GUI'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>present<span class=\"token operator\">?</span> <span class=\"token operator\">?</span> <span class=\"token symbol\">:chrome</span> <span class=\"token punctuation\">:</span> <span class=\"token symbol\">:headless_chrome</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>This way <code class=\"language-text\">rails test:system</code> will be quietly humming along in the console while you can enjoy some quality time on Hacker News. The original GUI version can be turned on with an environment variable: <code class=\"language-text\">GUI=1 rails test:system</code>. As a bonus, headless tests are slightly faster.</p>\n<p>But this is only a cosmetic change.</p>\n<h3 id=\"rack-test\"><a href=\"#rack-test\" aria-label=\"rack test permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Rack test</h3>\n<p>Rails is using <a href=\"https://github.com/teamcapybara/capybara\" target=\"_blank\" rel=\"nofollow\">capybara</a> to drive and assert the UI. Capybara has different drivers for different browsers. There is also a driver that plugs into any <a href=\"https://github.com/rack/rack\" target=\"_blank\" rel=\"nofollow\">rack</a> app - of which Rails is one - and drives the app by invoking rack stack directly and analyzing the generated html. This driver is called <code class=\"language-text\">rack_test</code>.</p>\n<p>Let’s turn it on:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ApplicationSystemTestCase</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ActionDispatch</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">SystemTestCase</span>\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span><span class=\"token function\">js</span></span><span class=\"token operator\">?</span>\n    <span class=\"token constant\">ENV</span><span class=\"token punctuation\">[</span><span class=\"token string\">'JS'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token constant\">ENV</span><span class=\"token punctuation\">[</span><span class=\"token string\">'GUI'</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">end</span>\n  \n  <span class=\"token keyword\">if</span> js<span class=\"token operator\">?</span>\n    <span class=\"token keyword\">if</span> <span class=\"token constant\">ENV</span><span class=\"token punctuation\">[</span><span class=\"token string\">'GUI'</span><span class=\"token punctuation\">]</span>\n      driven_by <span class=\"token symbol\">:selenium</span><span class=\"token punctuation\">,</span> using<span class=\"token punctuation\">:</span> <span class=\"token symbol\">:chrome</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> args<span class=\"token punctuation\">:</span> <span class=\"token string\">%w[auto-open-devtools-for-tabs start-maximized]</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span>\n      driven_by <span class=\"token symbol\">:selenium</span><span class=\"token punctuation\">,</span> using<span class=\"token punctuation\">:</span> <span class=\"token symbol\">:headless_chrome</span>\n    <span class=\"token keyword\">end</span>\n  <span class=\"token keyword\">else</span>\n    driven_by <span class=\"token symbol\">:rack_test</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>With that in place, <code class=\"language-text\">rails test:system</code> will run in ruby test process without spawning a browser. <code class=\"language-text\">JS=1 rails test:system</code> will run in a headless browser and <code class=\"language-text\">GUI=1 rails test:system</code> - in the regular browser.</p>\n<p>It may not seem all that useful - to run UI tests without UI - but the system tests are more than just UI. Often it’s the underlying exceptions we want to see, the business logic methods we want to inspect. The lack of some div on the page is rarely a problem in its own right - it’s the underlying machinery that is at fault. And it’s easier and faster to look into it from within a single ruby test process. There is also a <code class=\"language-text\">given</code> part of the test - where we set up some initial state - and that again does not need a browser, so iterating on that part is faster without having to start one all the time.</p>\n<p><em>Run tests in both JS and rack_test modes on CI, to stay in sync with the reality.</em></p>\n<h2 id=\"dealing-with-javascript\"><a href=\"#dealing-with-javascript\" aria-label=\"dealing with javascript permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dealing with JavaScript</h2>\n<p>Now that we can run system tests in fast mode, let’s see what we can do about JavaScript powered features that won’t work there.</p>\n<h3 id=\"opting-out-of-rack-test\"><a href=\"#opting-out-of-rack-test\" aria-label=\"opting out of rack test permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Opting out of rack test</h3>\n<p>By far the easiest thing to do is to run tests that touch on those features only in JS mode. All it takes is to wrap a test in <code class=\"language-text\">if js?</code>. This sort of defeats the whole purpose, but, on the other hand you are not locked into an “all or nothing” ghetto. Yes, everything can have a non-JS version, but not everything is worth the effort.</p>\n<h3 id=\"changing-test-code-to-support-both-versions\"><a href=\"#changing-test-code-to-support-both-versions\" aria-label=\"changing test code to support both versions permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Changing test code to support both versions</h3>\n<p>Sometimes a single test navigation can be isolated to be performed differently based on the context. For example, JavaScript confirm popup only exists in the browser. We can capture that difference in a test helper that does the right thing based on how the test is run:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">confirm</span></span>\n  js<span class=\"token operator\">?</span> <span class=\"token operator\">?</span> accept_confirm <span class=\"token punctuation\">{</span> <span class=\"token keyword\">yield</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">yield</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>Another good example for a helper of that kind is a date input. You may already have a helper for filling in fancy JavaScript date inputs (as they may be “improved” beyond Capybara’s <code class=\"language-text\">fill_in</code> capabilities). Here is the one from a project I worked on (date inputs are enhanced with <a href=\"https://flatpickr.js.org/\" target=\"_blank\" rel=\"nofollow\">flatpickr</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\">  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">fill_in_date</span></span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">,</span> with<span class=\"token punctuation\">:</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># what a pain...</span>\n    label_el <span class=\"token operator\">=</span> find<span class=\"token punctuation\">(</span><span class=\"token string\">'label'</span><span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">:</span> label<span class=\"token punctuation\">)</span>\n    input_el <span class=\"token operator\">=</span> find<span class=\"token punctuation\">(</span><span class=\"token string\">'#'</span> <span class=\"token operator\">+</span> label_el<span class=\"token punctuation\">[</span><span class=\"token symbol\">:for</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> visible<span class=\"token punctuation\">:</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">)</span>\n    flatpickr_input_el <span class=\"token operator\">=</span> input_el<span class=\"token punctuation\">.</span>sibling<span class=\"token punctuation\">(</span><span class=\"token string\">'input.flatpickr-input'</span><span class=\"token punctuation\">)</span>\n    flatpickr_input_el<span class=\"token punctuation\">.</span>fill_in<span class=\"token punctuation\">(</span>with<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n    flatpickr_input_el<span class=\"token punctuation\">.</span>fill_in<span class=\"token punctuation\">(</span>with<span class=\"token punctuation\">:</span> with<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">'%d/%m/%Y'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">end</span></code></pre></div>\n<p>Adding a non-JS version to this is trivial:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\">  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">fill_in_date</span></span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">,</span> with<span class=\"token punctuation\">:</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> js<span class=\"token operator\">?</span>\n      label_el <span class=\"token operator\">=</span> find<span class=\"token punctuation\">(</span><span class=\"token string\">'label'</span><span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">:</span> label<span class=\"token punctuation\">)</span>\n      input_el <span class=\"token operator\">=</span> find<span class=\"token punctuation\">(</span><span class=\"token string\">'#'</span> <span class=\"token operator\">+</span> label_el<span class=\"token punctuation\">[</span><span class=\"token symbol\">:for</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> visible<span class=\"token punctuation\">:</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">)</span>\n      flatpickr_input_el <span class=\"token operator\">=</span> input_el<span class=\"token punctuation\">.</span>sibling<span class=\"token punctuation\">(</span><span class=\"token string\">'input.flatpickr-input'</span><span class=\"token punctuation\">)</span>\n      flatpickr_input_el<span class=\"token punctuation\">.</span>fill_in<span class=\"token punctuation\">(</span>with<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n      flatpickr_input_el<span class=\"token punctuation\">.</span>fill_in<span class=\"token punctuation\">(</span>with<span class=\"token punctuation\">:</span> with<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">'%d/%m/%Y'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span>\n      fill_in label<span class=\"token punctuation\">,</span> with<span class=\"token punctuation\">:</span> with <span class=\"token comment\"># duh, so much simpler</span>\n    <span class=\"token keyword\">end</span>\n  <span class=\"token keyword\">end</span></code></pre></div>\n<h3 id=\"progressive-enhancement-views\"><a href=\"#progressive-enhancement-views\" aria-label=\"progressive enhancement views permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Progressive enhancement (views)</h3>\n<p>Other times the difference in the behavior is greater than that of enhancing a date input. Some changes to the view code as well as the test code may be required to support both versions.</p>\n<p>Imagine a form with a single checkbox that automatically submits whenever checkbox is toggled. This can only be done in JavaScript. For the non-JS version we can add a “Submit” button that is only shown when the form page is viewed without JavaScript. Here is an example support code (in the top layout file):</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>no-js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\"><span class=\"token selector\">.js .js-hidden</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">'js'</span></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>When the JavaScript is enabled, the script will replace top element class name from <code class=\"language-text\">no-js</code> to <code class=\"language-text\">js</code>, thus activating the CSS rules. Now we can add <code class=\"language-text\">js-hidden</code> class to the submit button (or indeed anything that we don’t want regular users to see):</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span><span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>submit<span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'js-hidden'</span> <span class=\"token operator\">%</span><span class=\"token operator\">></span></code></pre></div>\n<p>Then in the test:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\">click_button <span class=\"token string\">'Submit'</span> <span class=\"token keyword\">unless</span> js<span class=\"token operator\">?</span></code></pre></div>\n<h3 id=\"progressive-enhancement-controllers\"><a href=\"#progressive-enhancement-controllers\" aria-label=\"progressive enhancement controllers permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Progressive enhancement (controllers)</h3>\n<p>Sometimes even that is not enough. Those are probably good times to stop. However, if you’re feeling adventurous or bored, keep reading. Rails has a few neat tricks up its sleeve worth going over.</p>\n<p>Let’s talk about comments. It’s pretty standard to have inline reply form appearing underneath the comment when a user clicks “reply”. This can only be done with JavaScript. Let’s call this “Reddit style” comments.</p>\n<p><strong>Reddit comments</strong></p>\n<div class=\"image-frame\" style=\"text-align: left\">\n  <div class=\"image-frame-image\"><gif-player gif=\"reddit-comments.gif\" width=\"350\" /></gif-player></div>\n  <div class=\"image-frame-caption\">Reddit style comments</div>\n</div>\n<p>Then there is Hacker News. Their version of leaving a comment is beautifully simple: new page with a form and a submit button. No JavaScript required.</p>\n<p><strong>HN comments</strong></p>\n<div class=\"image-frame\" style=\"text-align: left\">\n  <div class=\"image-frame-image\"><gif-player gif=\"hn-comments.gif\" width=\"350\" /></gif-player></div>\n  <div class=\"image-frame-caption\">HN style comments</div>\n</div>\n<p>Now let’s say your site must have “Reddit style” comments for whatever reason. Can you still have “HN style” comments in  tests? The answer is yes and there are multiple ways to get there. Let’s pick the most railsy one.</p>\n<p>Unlike in the “single checkbox form” example above, it’s not just the markup that is different, the navigation is going to be different too. And when navigation is involved, look for a controller.</p>\n<p>Rails has a built in mechanism for conditionally handling different types of requests: <code class=\"language-text\">respond_to</code>. When a <code class=\"language-text\">form_with</code> is submitted or a <code class=\"language-text\">link_to remote: true</code> is clicked, rails recognizes the incoming request’s type (aka format) as JS. When there is no JavaScript around, they fall back to their natural behavior and the corresponding requests come in as HTML. We can hook into that to make the controller behind “Reply” button, handle both cases differently.</p>\n<p>Taking the above example, each comment is rendered in a partial (<code class=\"language-text\">app/views/comments/_comment.html.erb</code>):</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>comment<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>&lt;%= dom_id(comment) %><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>comment-body<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    &lt;%= comment.body %>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>comment-metadata<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    &lt;%= comment.created_at %> | &lt;%= link_to 'Reply', new_comment_comment_path(comment, target: \"##{dom_id(comment)} .comment-reply-form\"), remote: true %>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>comment-reply-form<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>comments<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    &lt;%= render comment.comments %>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Note the <code class=\"language-text\">remote: true</code> bit on the ‘Reply’ link. Also note the <code class=\"language-text\">target</code> query parameter - it tells the server side JS template (see below) where to insert the reply form to.</p>\n<p>Comments controller <code class=\"language-text\">new</code> action doesn’t really give it away:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">new</span></span>\n  <span class=\"token variable\">@comment</span> <span class=\"token operator\">=</span> <span class=\"token variable\">@commentable</span><span class=\"token punctuation\">.</span>comments<span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span>\n<span class=\"token class-name\">end</span></code></pre></div>\n<p>But there is also JavaScript template next to the default <code class=\"language-text\">new.html.erb</code> to handle the ajax version of “Reply” link  <code class=\"language-text\">app/views/comments/new.js.erb</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> replyFormContainer <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;%= params[:target] %>\"</span><span class=\"token punctuation\">)</span>\n  replyFormContainer<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;%= j render 'form', comment: @comment, local: false %>\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>This will insert a new comment form into the placeholder mentioned earlier.</p>\n<p>It’s important to note that we reuse the same server side rendering as in the html version. That JavaScript identifies where new markup should go and then inserts it there. It is not concerned with generating the actual html. Rendering the same markup on both server and client opens up the door to a lot of code duplication. We don’t want that.</p>\n<p>On to the comment creation. The form inserted by “Reply” link is a remote one, so it will submit via ajax by default. Once again, we employ <code class=\"language-text\">respond_to</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">create</span></span>\n  <span class=\"token variable\">@comment</span> <span class=\"token operator\">=</span> <span class=\"token variable\">@commentable</span><span class=\"token punctuation\">.</span>comments<span class=\"token punctuation\">.</span>build<span class=\"token punctuation\">(</span>comment_params<span class=\"token punctuation\">)</span>\n\n  respond_to <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>format<span class=\"token operator\">|</span>\n    <span class=\"token keyword\">if</span> <span class=\"token variable\">@comment</span><span class=\"token punctuation\">.</span>save\n      format<span class=\"token punctuation\">.</span>html <span class=\"token punctuation\">{</span> redirect_to <span class=\"token variable\">@comment</span><span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">,</span> notice<span class=\"token punctuation\">:</span> <span class=\"token string\">'Comment was successfully created.'</span> <span class=\"token punctuation\">}</span>\n      format<span class=\"token punctuation\">.</span>js\n    <span class=\"token keyword\">else</span>\n      format<span class=\"token punctuation\">.</span>html <span class=\"token punctuation\">{</span> render <span class=\"token symbol\">:new</span> <span class=\"token punctuation\">}</span>\n      format<span class=\"token punctuation\">.</span>js <span class=\"token punctuation\">{</span> render <span class=\"token symbol\">:new</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">end</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>In JavaScript mode, the create action success does not redirect, but renders a template:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> parentComment <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;%= dom_id(@comment.commentable) %>'</span><span class=\"token punctuation\">)</span>\n  parentComment<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;%= j render @comment.commentable %>\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>This will replace the entire parent comment (along with the replies), thus rendering newly created reply and getting rid of the reply form.</p>\n<p>Once again, there is no html generated in JavaScript. Bog standard Rails render is used to render post comments (as well as nested comment replies).</p>\n<p>And this is all it takes to have both Reddit and Hacker News comments at the same time.</p>\n<h4 id=\"take-two-stimulus\"><a href=\"#take-two-stimulus\" aria-label=\"take two stimulus permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Take two: Stimulus</h4>\n<p>The above example is so terse, it almost makes a disservice at making the point reserved for this section: JavaScript is coupled to the particular markup. The simplicity of UJS has a flip side: server side generated JavaScript has no knowledge of which part of the page it was originated from. UJS evaluates everything in the global scope. That means that when we render “new comment” form, JavaScript has to locate an element to insert the form into. We got away without having to do it by passing CSS selector in a <code class=\"language-text\">target</code> query parameter. But the coupling is fundamentally there and sooner or later it will bite.</p>\n<p>Stimulus somewhat addresses that. It does not entirely solve the problem - there is still a coupling between markup and JavaScript - but at least it is all on the client and it does not abuse CSS selectors.</p>\n<p><em>Run <code class=\"language-text\">bundle exec webpacker:install:stimulus</code> to add Stimulus to your project.</em></p>\n<p>UJS is doing a great job sending our requests via ajax so we’re going to keep it around for that part. Stimulus will take over the response handling. It might seem a bit messy to mix the two, but it really makes no difference to Stimulus - it plugs into any DOM event and UJS ajax events are just as good of a fit.</p>\n<p>The change is best viewed in a diff:</p>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre class=\"language-diff\"><code class=\"language-diff\"><span class=\"token coord\">--- a/app/views/comments/_comment.html.erb</span>\n<span class=\"token coord\">+++ b/app/views/comments/_comment.html.erb</span>\n<span class=\"token coord\">@@ -1,12 +1,12 @@</span>\n<span class=\"token deleted-sign deleted\">-&lt;div class=\"comment\" id=\"&lt;%= dom_id(comment) %>\">\n</span><span class=\"token inserted-sign inserted\">+&lt;div class=\"comment\" data-controller=\"reply\">\n</span><span class=\"token unchanged\">   &lt;div class=\"comment-body\">\n     &lt;%= comment.body %>\n   &lt;/div>\n \n   &lt;div class=\"comment-metadata\">\n</span><span class=\"token deleted-sign deleted\">-    &lt;%= comment.created_at %> | &lt;%= link_to 'Reply', new_comment_comment_path(comment), remote: true %>\n</span><span class=\"token inserted-sign inserted\">+    &lt;%= comment.created_at %> | &lt;%= link_to 'Reply', new_comment_comment_path(comment), remote: true, data: { action: 'ajax:success->reply#onNewForm' } %>\n</span><span class=\"token unchanged\">   &lt;/div>\n</span><span class=\"token deleted-sign deleted\">-  &lt;div class=\"comment-reply-form\">&lt;/div>\n</span><span class=\"token inserted-sign inserted\">+  &lt;div data-target=\"reply.form\">&lt;/div>\n</span><span class=\"token unchanged\"> \n   &lt;div class=\"comments\">\n     &lt;%= render comment.comments %></span></code></pre></div>\n<p>As in the previous version, “Reply” link is going to perform UJS powered ajax request. But there is now also an extra data action that specifies what to do with the response. It’s a bit of a mouthful, let’s translate it into plain English: “when an <code class=\"language-text\">ajax:success</code> event is dispatched by an underlying DOM, call <code class=\"language-text\">onNewForm</code> method on an enclosing stimulus <code class=\"language-text\">reply</code> controller”.\nThe scope of the enclosing <code class=\"language-text\">reply</code> controller is defined by the <code class=\"language-text\">data-controller</code> attribute on the comment container div. The controller itself is a new JavaScript file (<code class=\"language-text\">app/javascript/controllers/reply_controller.js</code>):</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Controller <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"stimulus\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">extends</span> Controller <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">static</span> targets <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'form'</span><span class=\"token punctuation\">]</span>\n\n  <span class=\"token function\">onNewForm</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span> xhr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>detail\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>formTarget<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">onNewForm</code> will replace the contents of <code class=\"language-text\">&lt;div data-target=&quot;reply.form&quot;&gt;&lt;/div&gt;</code> with the response from the server.</p>\n<p>Since UJS is expecting response to be a valid JavaScript (because it evaluates it), we get rails to return a JavaScript string instead of just a blob of text and so we then need to <code class=\"language-text\">eval(xhr.response)</code> to get the actual content. It’s a bit hacky, but on the other hand the server side template is just a one-liner:</p>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre class=\"language-diff\"><code class=\"language-diff\"><span class=\"token coord\">--- a/app/views/comments/new.js.erb</span>\n<span class=\"token coord\">+++ b/app/views/comments/new.js.erb</span>\n<span class=\"token coord\">@@ -1,4 +1 @@</span>\n<span class=\"token deleted-sign deleted\">-(function() {\n-  const replyFormContainer = document.querySelector(\"&lt;%= params[:target] %>\")\n-  replyFormContainer.innerHTML = \"&lt;%= j render 'form', comment: @comment, local: false %>\"\n-})()\n</span><span class=\"token inserted-sign inserted\">+\"&lt;%= j render 'form', comment: @comment, local: false %>\"</span></code></pre></div>\n<p>The response from the form submit it also handled by Stimulus in a similar manner to the “Reply” link:</p>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre class=\"language-diff\"><code class=\"language-diff\"><span class=\"token coord\">--- a/app/views/comments/_form.html.erb</span>\n<span class=\"token coord\">+++ b/app/views/comments/_form.html.erb</span>\n<span class=\"token coord\">@@ -1,4 +1,6 @@</span>\n<span class=\"token deleted-sign deleted\">-&lt;%= form_with(model: [comment.commentable, comment], local: local) do |form| %>\n</span><span class=\"token inserted-sign inserted\">+&lt;% stimulus_form_action = 'ajax:success->reply#onCommentSuccess ajax:error->reply#onNewForm' %>\n+\n+&lt;%= form_with(model: [comment.commentable, comment], local: local, html: { data: { action: stimulus_form_action } }) do |form| %>\n</span><span class=\"token unchanged\">   &lt;% if comment.errors.any? %>\n     &lt;div class=\"error_explanation\">\n       &lt;h2>&lt;%= pluralize(comment.errors.count, \"error\") %> prohibited this comment from being saved:&lt;/h2></span></code></pre></div>\n<p>Note how we handle both success and error cases differently. The error case simply reuses <code class=\"language-text\">onNewForm</code> handler to redraw the form with validation errors. Let’s add the success handler:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token function\">onCommentSuccess</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span> xhr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>detail\n    <span class=\"token comment\">// `this.element` is the element with `data-controller` attribute</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>This will replace the entire comment being replied to (along with the replies) with the new version from the server:</p>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre class=\"language-diff\"><code class=\"language-diff\"><span class=\"token coord\">--- a/app/views/comments/create.js.erb</span>\n<span class=\"token coord\">+++ b/app/views/comments/create.js.erb</span>\n<span class=\"token coord\">@@ -1,4 +1 @@</span>\n<span class=\"token deleted-sign deleted\">-(function() {\n-  const parentComment = document.getElementById('&lt;%= dom_id(@comment.commentable) %>')\n-  parentComment.innerHTML = \"&lt;%= j render @comment.commentable %>\"\n-})()\n</span><span class=\"token inserted-sign inserted\">+\"&lt;%= j render @comment.commentable %>\"</span></code></pre></div>\n<p>The Stimulus version essentially moves all JavaScript onto the client. Server is still rendering the html - and that’s good -, but it is no longer responsible for putting it into the right place. This seems tidier. Another nice thing about Stimulus version is that client side code can be unit tested in isolation. In contrast, server side generated JavaScript can only be tested in heavy JS enabled system tests.</p>\n<h2 id=\"conclusion\"><a href=\"#conclusion\" aria-label=\"conclusion permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Conclusion</h2>\n<p>Out of the box, Rails has great support for progressive enhancement. <code class=\"language-text\">rack_test</code> is a way to enforce it. Together they unlock a possibility to build great web applications faster.</p>\n<p>That’s it from me today. View the code on <a href=\"https://github.com/artemave/rails-testing-post\" target=\"_blank\" rel=\"nofollow\">github</a>, play with the site on <a href=\"https://rails-progressive-enhancement.herokuapp.com/\" target=\"_blank\" rel=\"nofollow\">heroku</a> (toggle “Disable JavaScript” in devtools to see both versions).</p>\n<p>A final word of caution: just because all this is possible and looks simple, doesn’t necessarily mean you should be doing it. Supporting PE adds more work and complexity. I personally think this is worth exploring, but it may turn out to be a terrible idea. Stay critical.</p>","htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Rails is a server side framework for building web applications. It gained prominence back when JavaScript was merely a pixi dust, sprinkled upon the server side generated html. The world has since moved on. SPAs are considered by many a default - if not the only sensible - way to generate web pages."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Rails has been pretty accommodating to this shift. Out of the box, "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/turbolinks/turbolinks","target":"_blank","rel":["nofollow"]},"children":[{"type":"text","value":"Turbolinks"}]},{"type":"text","value":" and "},{"type":"element","tagName":"a","properties":{"href":"https://guides.rubyonrails.org/working_with_javascript_in_rails.html#unobtrusive-javascript","target":"_blank","rel":["nofollow"]},"children":[{"type":"text","value":"UJS"}]},{"type":"text","value":" magically turn on the SPA glamour. Alternatively, bolting in a pure frontend tech such as React on top of Rails is only a single command away. Still, a default Rails site can function in a browser with no JavaScript. Turbolinks navigation gracefully fall back to the full page reload (no extra code required); remote forms and links fall back to their non-ajax versions, with a well defined "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"respond_to"}]},{"type":"text","value":" API to handle the server side. Looking at it from the other end, Rails upgrades the UX for more advanced clients. Which is what progressive enhancement is all about."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is mildly impressive but, let’s face it, in an era of JavaScript dominance it sounds a bit… academic. Most of the web only works with JavaScript, so why would the users of the web care? They don’t. The vast majority of them anyway. Web developers on the other hand, we can get something out of it."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What is there to get out of keeping web apps functional without JavaScript? There is an overarching answer: single stack architecture - that is, when all coding happens in a single tech stack, e.g. Rails - is inherently simpler and more productive environment. I am not, however, going to dwell on that one. Instead, here is a different pitch: fast tests."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Web applications have tests. Some of them are “full stack” tests that drive the application through the UI. Naturally those tests use a web browser. However, if the UI does not require JavaScript, then the tests, technically, don’t need a real browser - they can be run by simply analyzing the html produced by the app. And, in case of Rails, without even starting a web server (by plugging directly into controllers output)."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When run like this, Rails system tests are much faster. 2x and onwards faster based on my anecdotal evidence. They are also less flaky and easier to debug, since the entire stack runs in a single ruby process (no extra browser process)."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is all very exciting, but in reality there is likely to be some legitimate JavaScript in your Rails app and there is simply no getting away from it. But that’s ok. So long as pockets of JavaScript are kept contained, the above applies."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The rest of this post looks into ways to have your cake (client-side JavaScript) and eat it (fast, non JavaScript test coverage)."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"But first we need to turn on the fast tests."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"system-tests"},"children":[{"type":"element","tagName":"a","properties":{"href":"#system-tests","ariaLabel":"system tests permalink","className":["anchor"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"System tests"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Out of the box, Rails 6 system tests pop up a Chrome browser ("},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"test/application_system_test_case.rb"}]},{"type":"text","value":"):"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ruby"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ruby"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ruby"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"require"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"test_helper\""}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"class"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","class-name"]},"children":[{"type":"text","value":"ApplicationSystemTestCase"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","constant"]},"children":[{"type":"text","value":"ActionDispatch"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"element","tagName":"span","properties":{"className":["token","constant"]},"children":[{"type":"text","value":"SystemTestCase"}]},{"type":"text","value":"\n  driven_by "},{"type":"element","tagName":"span","properties":{"className":["token","symbol"]},"children":[{"type":"text","value":":selenium"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" using"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","symbol"]},"children":[{"type":"text","value":":chrome"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" screen_size"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"1400"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"1400"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"end"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"headless-chrome"},"children":[{"type":"element","tagName":"a","properties":{"href":"#headless-chrome","ariaLabel":"headless chrome permalink","className":["anchor"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Headless Chrome"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The browser window flashing is a distraction so the first thing to do is to switch to headless mode by default (rails also registers "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":":headless_chrome"}]},{"type":"text","value":" driver):"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ruby"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ruby"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ruby"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"require"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'test_helper'"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"class"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","class-name"]},"children":[{"type":"text","value":"ApplicationSystemTestCase"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","constant"]},"children":[{"type":"text","value":"ActionDispatch"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"element","tagName":"span","properties":{"className":["token","constant"]},"children":[{"type":"text","value":"SystemTestCase"}]},{"type":"text","value":"\n  driven_by "},{"type":"element","tagName":"span","properties":{"className":["token","symbol"]},"children":[{"type":"text","value":":selenium"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" using"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","constant"]},"children":[{"type":"text","value":"ENV"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'GUI'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"present"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"?"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"?"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","symbol"]},"children":[{"type":"text","value":":chrome"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","symbol"]},"children":[{"type":"text","value":":headless_chrome"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"end"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This way "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"rails test:system"}]},{"type":"text","value":" will be quietly humming along in the console while you can enjoy some quality time on Hacker News. The original GUI version can be turned on with an environment variable: "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"GUI=1 rails test:system"}]},{"type":"text","value":". As a bonus, headless tests are slightly faster."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"But this is only a cosmetic change."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"rack-test"},"children":[{"type":"element","tagName":"a","properties":{"href":"#rack-test","ariaLabel":"rack test permalink","className":["anchor"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Rack test"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Rails is using "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/teamcapybara/capybara","target":"_blank","rel":["nofollow"]},"children":[{"type":"text","value":"capybara"}]},{"type":"text","value":" to drive and assert the UI. Capybara has different drivers for different browsers. There is also a driver that plugs into any "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/rack/rack","target":"_blank","rel":["nofollow"]},"children":[{"type":"text","value":"rack"}]},{"type":"text","value":" app - of which Rails is one - and drives the app by invoking rack stack directly and analyzing the generated html. This driver is called "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"rack_test"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let’s turn it on:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ruby"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ruby"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ruby"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"class"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","class-name"]},"children":[{"type":"text","value":"ApplicationSystemTestCase"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","constant"]},"children":[{"type":"text","value":"ActionDispatch"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"element","tagName":"span","properties":{"className":["token","constant"]},"children":[{"type":"text","value":"SystemTestCase"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"def"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","method-definition"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"self"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"js"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"?"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","constant"]},"children":[{"type":"text","value":"ENV"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'JS'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"||"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","constant"]},"children":[{"type":"text","value":"ENV"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'GUI'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"end"}]},{"type":"text","value":"\n  \n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" js"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"?"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","constant"]},"children":[{"type":"text","value":"ENV"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'GUI'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"text","value":"\n      driven_by "},{"type":"element","tagName":"span","properties":{"className":["token","symbol"]},"children":[{"type":"text","value":":selenium"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" using"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","symbol"]},"children":[{"type":"text","value":":chrome"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" options"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" args"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"%w[auto-open-devtools-for-tabs start-maximized]"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"else"}]},{"type":"text","value":"\n      driven_by "},{"type":"element","tagName":"span","properties":{"className":["token","symbol"]},"children":[{"type":"text","value":":selenium"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" using"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","symbol"]},"children":[{"type":"text","value":":headless_chrome"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"end"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"else"}]},{"type":"text","value":"\n    driven_by "},{"type":"element","tagName":"span","properties":{"className":["token","symbol"]},"children":[{"type":"text","value":":rack_test"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"end"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"end"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With that in place, "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"rails test:system"}]},{"type":"text","value":" will run in ruby test process without spawning a browser. "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"JS=1 rails test:system"}]},{"type":"text","value":" will run in a headless browser and "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"GUI=1 rails test:system"}]},{"type":"text","value":" - in the regular browser."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It may not seem all that useful - to run UI tests without UI - but the system tests are more than just UI. Often it’s the underlying exceptions we want to see, the business logic methods we want to inspect. The lack of some div on the page is rarely a problem in its own right - it’s the underlying machinery that is at fault. And it’s easier and faster to look into it from within a single ruby test process. There is also a "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"given"}]},{"type":"text","value":" part of the test - where we set up some initial state - and that again does not need a browser, so iterating on that part is faster without having to start one all the time."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Run tests in both JS and rack_test modes on CI, to stay in sync with the reality."}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"dealing-with-javascript"},"children":[{"type":"element","tagName":"a","properties":{"href":"#dealing-with-javascript","ariaLabel":"dealing with javascript permalink","className":["anchor"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Dealing with JavaScript"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now that we can run system tests in fast mode, let’s see what we can do about JavaScript powered features that won’t work there."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"opting-out-of-rack-test"},"children":[{"type":"element","tagName":"a","properties":{"href":"#opting-out-of-rack-test","ariaLabel":"opting out of rack test permalink","className":["anchor"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Opting out of rack test"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"By far the easiest thing to do is to run tests that touch on those features only in JS mode. All it takes is to wrap a test in "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"if js?"}]},{"type":"text","value":". This sort of defeats the whole purpose, but, on the other hand you are not locked into an “all or nothing” ghetto. Yes, everything can have a non-JS version, but not everything is worth the effort."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"changing-test-code-to-support-both-versions"},"children":[{"type":"element","tagName":"a","properties":{"href":"#changing-test-code-to-support-both-versions","ariaLabel":"changing test code to support both versions permalink","className":["anchor"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Changing test code to support both versions"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Sometimes a single test navigation can be isolated to be performed differently based on the context. For example, JavaScript confirm popup only exists in the browser. We can capture that difference in a test helper that does the right thing based on how the test is run:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ruby"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ruby"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ruby"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"def"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","method-definition"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"confirm"}]}]},{"type":"text","value":"\n  js"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"?"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"?"}]},{"type":"text","value":" accept_confirm "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"yield"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"yield"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"end"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Another good example for a helper of that kind is a date input. You may already have a helper for filling in fancy JavaScript date inputs (as they may be “improved” beyond Capybara’s "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"fill_in"}]},{"type":"text","value":" capabilities). Here is the one from a project I worked on (date inputs are enhanced with "},{"type":"element","tagName":"a","properties":{"href":"https://flatpickr.js.org/","target":"_blank","rel":["nofollow"]},"children":[{"type":"text","value":"flatpickr"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ruby"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ruby"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ruby"]},"children":[{"type":"text","value":"  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"def"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","method-definition"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"fill_in_date"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"label"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" with"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# what a pain..."}]},{"type":"text","value":"\n    label_el "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" find"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'label'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" text"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" label"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    input_el "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" find"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'#'"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" label_el"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"element","tagName":"span","properties":{"className":["token","symbol"]},"children":[{"type":"text","value":":for"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" visible"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"false"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    flatpickr_input_el "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" input_el"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"sibling"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'input.flatpickr-input'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    flatpickr_input_el"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"fill_in"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"with"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"''"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    flatpickr_input_el"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"fill_in"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"with"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" with"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"strftime"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'%d/%m/%Y'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"end"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Adding a non-JS version to this is trivial:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ruby"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ruby"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ruby"]},"children":[{"type":"text","value":"  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"def"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","method-definition"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"fill_in_date"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"label"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" with"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" js"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"?"}]},{"type":"text","value":"\n      label_el "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" find"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'label'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" text"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" label"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n      input_el "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" find"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'#'"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" label_el"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"element","tagName":"span","properties":{"className":["token","symbol"]},"children":[{"type":"text","value":":for"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" visible"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"false"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n      flatpickr_input_el "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" input_el"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"sibling"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'input.flatpickr-input'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n      flatpickr_input_el"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"fill_in"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"with"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"''"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n      flatpickr_input_el"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"fill_in"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"with"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" with"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"strftime"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'%d/%m/%Y'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"else"}]},{"type":"text","value":"\n      fill_in label"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" with"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" with "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# duh, so much simpler"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"end"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"end"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"progressive-enhancement-views"},"children":[{"type":"element","tagName":"a","properties":{"href":"#progressive-enhancement-views","ariaLabel":"progressive enhancement views permalink","className":["anchor"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Progressive enhancement (views)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Other times the difference in the behavior is greater than that of enhancing a date input. Some changes to the view code as well as the test code may be required to support both versions."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Imagine a form with a single checkbox that automatically submits whenever checkbox is toggled. This can only be done in JavaScript. For the non-JS version we can add a “Submit” button that is only shown when the form page is viewed without JavaScript. Here is an example support code (in the top layout file):"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"html"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-html"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-html"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"html"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","attr-name"]},"children":[{"type":"text","value":"class"}]},{"type":"element","tagName":"span","properties":{"className":["token","attr-value"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"="}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"\""}]},{"type":"text","value":"no-js"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"\""}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":">"}]}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"head"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":">"}]}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"style"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":">"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","style"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","language-css"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","selector"]},"children":[{"type":"text","value":".js .js-hidden"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","property"]},"children":[{"type":"text","value":"display"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" none"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]},{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"</"}]},{"type":"text","value":"style"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":">"}]}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"script"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":">"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","script"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","language-javascript"]},"children":[{"type":"text","value":"document"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"documentElement"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"className "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'js'"}]}]}]},{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"</"}]},{"type":"text","value":"script"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":">"}]}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When the JavaScript is enabled, the script will replace top element class name from "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"no-js"}]},{"type":"text","value":" to "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"js"}]},{"type":"text","value":", thus activating the CSS rules. Now we can add "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"js-hidden"}]},{"type":"text","value":" class to the submit button (or indeed anything that we don’t want regular users to see):"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ruby"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ruby"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ruby"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"%"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" f"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"submit"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"class"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'js-hidden'"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"%"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Then in the test:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ruby"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ruby"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ruby"]},"children":[{"type":"text","value":"click_button "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'Submit'"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"unless"}]},{"type":"text","value":" js"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"?"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"progressive-enhancement-controllers"},"children":[{"type":"element","tagName":"a","properties":{"href":"#progressive-enhancement-controllers","ariaLabel":"progressive enhancement controllers permalink","className":["anchor"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Progressive enhancement (controllers)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Sometimes even that is not enough. Those are probably good times to stop. However, if you’re feeling adventurous or bored, keep reading. Rails has a few neat tricks up its sleeve worth going over."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let’s talk about comments. It’s pretty standard to have inline reply form appearing underneath the comment when a user clicks “reply”. This can only be done with JavaScript. Let’s call this “Reddit style” comments."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Reddit comments"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["image-frame"],"style":"text-align: left"},"children":[{"type":"text","value":"\n  "},{"type":"element","tagName":"div","properties":{"className":["image-frame-image"]},"children":[{"type":"element","tagName":"gif-player","properties":{"gif":"reddit-comments.gif","width":350},"children":[]}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"div","properties":{"className":["image-frame-caption"]},"children":[{"type":"text","value":"Reddit style comments"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Then there is Hacker News. Their version of leaving a comment is beautifully simple: new page with a form and a submit button. No JavaScript required."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"HN comments"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["image-frame"],"style":"text-align: left"},"children":[{"type":"text","value":"\n  "},{"type":"element","tagName":"div","properties":{"className":["image-frame-image"]},"children":[{"type":"element","tagName":"gif-player","properties":{"gif":"hn-comments.gif","width":350},"children":[]}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"div","properties":{"className":["image-frame-caption"]},"children":[{"type":"text","value":"HN style comments"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now let’s say your site must have “Reddit style” comments for whatever reason. Can you still have “HN style” comments in  tests? The answer is yes and there are multiple ways to get there. Let’s pick the most railsy one."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Unlike in the “single checkbox form” example above, it’s not just the markup that is different, the navigation is going to be different too. And when navigation is involved, look for a controller."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Rails has a built in mechanism for conditionally handling different types of requests: "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"respond_to"}]},{"type":"text","value":". When a "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"form_with"}]},{"type":"text","value":" is submitted or a "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"link_to remote: true"}]},{"type":"text","value":" is clicked, rails recognizes the incoming request’s type (aka format) as JS. When there is no JavaScript around, they fall back to their natural behavior and the corresponding requests come in as HTML. We can hook into that to make the controller behind “Reply” button, handle both cases differently."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Taking the above example, each comment is rendered in a partial ("},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"app/views/comments/_comment.html.erb"}]},{"type":"text","value":"):"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"html"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-html"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-html"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"div"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","attr-name"]},"children":[{"type":"text","value":"class"}]},{"type":"element","tagName":"span","properties":{"className":["token","attr-value"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"="}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"\""}]},{"type":"text","value":"comment"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"\""}]}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","attr-name"]},"children":[{"type":"text","value":"id"}]},{"type":"element","tagName":"span","properties":{"className":["token","attr-value"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"="}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"\""}]},{"type":"text","value":"<%= dom_id(comment) %>"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"\""}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":">"}]}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"div"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","attr-name"]},"children":[{"type":"text","value":"class"}]},{"type":"element","tagName":"span","properties":{"className":["token","attr-value"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"="}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"\""}]},{"type":"text","value":"comment-body"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"\""}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":">"}]}]},{"type":"text","value":"\n    <%= comment.body %>\n  "},{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"</"}]},{"type":"text","value":"div"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":">"}]}]},{"type":"text","value":"\n\n  "},{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"div"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","attr-name"]},"children":[{"type":"text","value":"class"}]},{"type":"element","tagName":"span","properties":{"className":["token","attr-value"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"="}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"\""}]},{"type":"text","value":"comment-metadata"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"\""}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":">"}]}]},{"type":"text","value":"\n    <%= comment.created_at %> | <%= link_to 'Reply', new_comment_comment_path(comment, target: \"##{dom_id(comment)} .comment-reply-form\"), remote: true %>\n  "},{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"</"}]},{"type":"text","value":"div"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":">"}]}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"div"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","attr-name"]},"children":[{"type":"text","value":"class"}]},{"type":"element","tagName":"span","properties":{"className":["token","attr-value"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"="}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"\""}]},{"type":"text","value":"comment-reply-form"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"\""}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":">"}]}]},{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"</"}]},{"type":"text","value":"div"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":">"}]}]},{"type":"text","value":"\n\n  "},{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"div"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","attr-name"]},"children":[{"type":"text","value":"class"}]},{"type":"element","tagName":"span","properties":{"className":["token","attr-value"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"="}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"\""}]},{"type":"text","value":"comments"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"\""}]}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":">"}]}]},{"type":"text","value":"\n    <%= render comment.comments %>\n  "},{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"</"}]},{"type":"text","value":"div"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":">"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","tag"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"</"}]},{"type":"text","value":"div"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":">"}]}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"remote: true"}]},{"type":"text","value":" bit on the ‘Reply’ link. Also note the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"target"}]},{"type":"text","value":" query parameter - it tells the server side JS template (see below) where to insert the reply form to."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Comments controller "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"new"}]},{"type":"text","value":" action doesn’t really give it away:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ruby"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ruby"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ruby"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"def"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","method-definition"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"new"}]}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","variable"]},"children":[{"type":"text","value":"@comment"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","variable"]},"children":[{"type":"text","value":"@commentable"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"comments"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"new"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","class-name"]},"children":[{"type":"text","value":"end"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"But there is also JavaScript template next to the default "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"new.html.erb"}]},{"type":"text","value":" to handle the ajax version of “Reply” link  "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"app/views/comments/new.js.erb"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"function"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" replyFormContainer "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" document"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"querySelector"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"<%= params[:target] %>\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n  replyFormContainer"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"innerHTML "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"<%= j render 'form', comment: @comment, local: false %>\""}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This will insert a new comment form into the placeholder mentioned earlier."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It’s important to note that we reuse the same server side rendering as in the html version. That JavaScript identifies where new markup should go and then inserts it there. It is not concerned with generating the actual html. Rendering the same markup on both server and client opens up the door to a lot of code duplication. We don’t want that."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"On to the comment creation. The form inserted by “Reply” link is a remote one, so it will submit via ajax by default. Once again, we employ "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"respond_to"}]},{"type":"text","value":":"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"ruby"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-ruby"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-ruby"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"def"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","method-definition"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"create"}]}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","variable"]},"children":[{"type":"text","value":"@comment"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","variable"]},"children":[{"type":"text","value":"@commentable"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"comments"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"build"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"comment_params"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n  respond_to "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"do"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"|"}]},{"type":"text","value":"format"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"|"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","variable"]},"children":[{"type":"text","value":"@comment"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"save\n      format"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"html "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" redirect_to "},{"type":"element","tagName":"span","properties":{"className":["token","variable"]},"children":[{"type":"text","value":"@comment"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"post"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" notice"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'Comment was successfully created.'"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":"\n      format"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"js\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"else"}]},{"type":"text","value":"\n      format"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"html "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" render "},{"type":"element","tagName":"span","properties":{"className":["token","symbol"]},"children":[{"type":"text","value":":new"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":"\n      format"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"js "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" render "},{"type":"element","tagName":"span","properties":{"className":["token","symbol"]},"children":[{"type":"text","value":":new"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"end"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"end"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"end"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In JavaScript mode, the create action success does not redirect, but renders a template:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"function"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" parentComment "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" document"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"getElementById"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'<%= dom_id(@comment.commentable) %>'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n  parentComment"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"innerHTML "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"<%= j render @comment.commentable %>\""}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This will replace the entire parent comment (along with the replies), thus rendering newly created reply and getting rid of the reply form."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once again, there is no html generated in JavaScript. Bog standard Rails render is used to render post comments (as well as nested comment replies)."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"And this is all it takes to have both Reddit and Hacker News comments at the same time."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"take-two-stimulus"},"children":[{"type":"element","tagName":"a","properties":{"href":"#take-two-stimulus","ariaLabel":"take two stimulus permalink","className":["anchor"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Take two: Stimulus"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The above example is so terse, it almost makes a disservice at making the point reserved for this section: JavaScript is coupled to the particular markup. The simplicity of UJS has a flip side: server side generated JavaScript has no knowledge of which part of the page it was originated from. UJS evaluates everything in the global scope. That means that when we render “new comment” form, JavaScript has to locate an element to insert the form into. We got away without having to do it by passing CSS selector in a "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"target"}]},{"type":"text","value":" query parameter. But the coupling is fundamentally there and sooner or later it will bite."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Stimulus somewhat addresses that. It does not entirely solve the problem - there is still a coupling between markup and JavaScript - but at least it is all on the client and it does not abuse CSS selectors."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Run "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"bundle exec webpacker:install:stimulus"}]},{"type":"text","value":" to add Stimulus to your project."}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"UJS is doing a great job sending our requests via ajax so we’re going to keep it around for that part. Stimulus will take over the response handling. It might seem a bit messy to mix the two, but it really makes no difference to Stimulus - it plugs into any DOM event and UJS ajax events are just as good of a fit."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The change is best viewed in a diff:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"diff"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-diff"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-diff"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","coord"]},"children":[{"type":"text","value":"--- a/app/views/comments/_comment.html.erb"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","coord"]},"children":[{"type":"text","value":"+++ b/app/views/comments/_comment.html.erb"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","coord"]},"children":[{"type":"text","value":"@@ -1,12 +1,12 @@"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","deleted-sign","deleted"]},"children":[{"type":"text","value":"-<div class=\"comment\" id=\"<%= dom_id(comment) %>\">\n"}]},{"type":"element","tagName":"span","properties":{"className":["token","inserted-sign","inserted"]},"children":[{"type":"text","value":"+<div class=\"comment\" data-controller=\"reply\">\n"}]},{"type":"element","tagName":"span","properties":{"className":["token","unchanged"]},"children":[{"type":"text","value":"   <div class=\"comment-body\">\n     <%= comment.body %>\n   </div>\n \n   <div class=\"comment-metadata\">\n"}]},{"type":"element","tagName":"span","properties":{"className":["token","deleted-sign","deleted"]},"children":[{"type":"text","value":"-    <%= comment.created_at %> | <%= link_to 'Reply', new_comment_comment_path(comment), remote: true %>\n"}]},{"type":"element","tagName":"span","properties":{"className":["token","inserted-sign","inserted"]},"children":[{"type":"text","value":"+    <%= comment.created_at %> | <%= link_to 'Reply', new_comment_comment_path(comment), remote: true, data: { action: 'ajax:success->reply#onNewForm' } %>\n"}]},{"type":"element","tagName":"span","properties":{"className":["token","unchanged"]},"children":[{"type":"text","value":"   </div>\n"}]},{"type":"element","tagName":"span","properties":{"className":["token","deleted-sign","deleted"]},"children":[{"type":"text","value":"-  <div class=\"comment-reply-form\"></div>\n"}]},{"type":"element","tagName":"span","properties":{"className":["token","inserted-sign","inserted"]},"children":[{"type":"text","value":"+  <div data-target=\"reply.form\"></div>\n"}]},{"type":"element","tagName":"span","properties":{"className":["token","unchanged"]},"children":[{"type":"text","value":" \n   <div class=\"comments\">\n     <%= render comment.comments %>"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As in the previous version, “Reply” link is going to perform UJS powered ajax request. But there is now also an extra data action that specifies what to do with the response. It’s a bit of a mouthful, let’s translate it into plain English: “when an "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ajax:success"}]},{"type":"text","value":" event is dispatched by an underlying DOM, call "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"onNewForm"}]},{"type":"text","value":" method on an enclosing stimulus "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"reply"}]},{"type":"text","value":" controller”.\nThe scope of the enclosing "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"reply"}]},{"type":"text","value":" controller is defined by the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"data-controller"}]},{"type":"text","value":" attribute on the comment container div. The controller itself is a new JavaScript file ("},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"app/javascript/controllers/reply_controller.js"}]},{"type":"text","value":"):"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"import"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" Controller "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"from"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"stimulus\""}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"export"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"default"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"class"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","class-name"]},"children":[{"type":"text","value":"extends"}]},{"type":"text","value":" Controller "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n\n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"static"}]},{"type":"text","value":" targets "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'form'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"text","value":"\n\n  "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"onNewForm"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","parameter"]},"children":[{"type":"text","value":"event"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" xhr"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" event"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"detail\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"this"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"formTarget"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"innerHTML "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"eval"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"xhr"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"response"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"onNewForm"}]},{"type":"text","value":" will replace the contents of "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"<div data-target=\"reply.form\"></div>"}]},{"type":"text","value":" with the response from the server."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since UJS is expecting response to be a valid JavaScript (because it evaluates it), we get rails to return a JavaScript string instead of just a blob of text and so we then need to "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"eval(xhr.response)"}]},{"type":"text","value":" to get the actual content. It’s a bit hacky, but on the other hand the server side template is just a one-liner:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"diff"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-diff"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-diff"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","coord"]},"children":[{"type":"text","value":"--- a/app/views/comments/new.js.erb"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","coord"]},"children":[{"type":"text","value":"+++ b/app/views/comments/new.js.erb"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","coord"]},"children":[{"type":"text","value":"@@ -1,4 +1 @@"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","deleted-sign","deleted"]},"children":[{"type":"text","value":"-(function() {\n-  const replyFormContainer = document.querySelector(\"<%= params[:target] %>\")\n-  replyFormContainer.innerHTML = \"<%= j render 'form', comment: @comment, local: false %>\"\n-})()\n"}]},{"type":"element","tagName":"span","properties":{"className":["token","inserted-sign","inserted"]},"children":[{"type":"text","value":"+\"<%= j render 'form', comment: @comment, local: false %>\""}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The response from the form submit it also handled by Stimulus in a similar manner to the “Reply” link:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"diff"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-diff"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-diff"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","coord"]},"children":[{"type":"text","value":"--- a/app/views/comments/_form.html.erb"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","coord"]},"children":[{"type":"text","value":"+++ b/app/views/comments/_form.html.erb"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","coord"]},"children":[{"type":"text","value":"@@ -1,4 +1,6 @@"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","deleted-sign","deleted"]},"children":[{"type":"text","value":"-<%= form_with(model: [comment.commentable, comment], local: local) do |form| %>\n"}]},{"type":"element","tagName":"span","properties":{"className":["token","inserted-sign","inserted"]},"children":[{"type":"text","value":"+<% stimulus_form_action = 'ajax:success->reply#onCommentSuccess ajax:error->reply#onNewForm' %>\n+\n+<%= form_with(model: [comment.commentable, comment], local: local, html: { data: { action: stimulus_form_action } }) do |form| %>\n"}]},{"type":"element","tagName":"span","properties":{"className":["token","unchanged"]},"children":[{"type":"text","value":"   <% if comment.errors.any? %>\n     <div class=\"error_explanation\">\n       <h2><%= pluralize(comment.errors.count, \"error\") %> prohibited this comment from being saved:</h2>"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note how we handle both success and error cases differently. The error case simply reuses "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"onNewForm"}]},{"type":"text","value":" handler to redraw the form with validation errors. Let’s add the success handler:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"javascript"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-javascript"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"  "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"onCommentSuccess"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","parameter"]},"children":[{"type":"text","value":"event"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" xhr"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" event"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"detail\n    "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"// `this.element` is the element with `data-controller` attribute"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"this"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"element"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"innerHTML "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"eval"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"xhr"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"response"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This will replace the entire comment being replied to (along with the replies) with the new version from the server:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"diff"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-diff"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-diff"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","coord"]},"children":[{"type":"text","value":"--- a/app/views/comments/create.js.erb"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","coord"]},"children":[{"type":"text","value":"+++ b/app/views/comments/create.js.erb"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","coord"]},"children":[{"type":"text","value":"@@ -1,4 +1 @@"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","deleted-sign","deleted"]},"children":[{"type":"text","value":"-(function() {\n-  const parentComment = document.getElementById('<%= dom_id(@comment.commentable) %>')\n-  parentComment.innerHTML = \"<%= j render @comment.commentable %>\"\n-})()\n"}]},{"type":"element","tagName":"span","properties":{"className":["token","inserted-sign","inserted"]},"children":[{"type":"text","value":"+\"<%= j render @comment.commentable %>\""}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The Stimulus version essentially moves all JavaScript onto the client. Server is still rendering the html - and that’s good -, but it is no longer responsible for putting it into the right place. This seems tidier. Another nice thing about Stimulus version is that client side code can be unit tested in isolation. In contrast, server side generated JavaScript can only be tested in heavy JS enabled system tests."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"conclusion"},"children":[{"type":"element","tagName":"a","properties":{"href":"#conclusion","ariaLabel":"conclusion permalink","className":["anchor"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Conclusion"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Out of the box, Rails has great support for progressive enhancement. "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"rack_test"}]},{"type":"text","value":" is a way to enforce it. Together they unlock a possibility to build great web applications faster."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"That’s it from me today. View the code on "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/artemave/rails-testing-post","target":"_blank","rel":["nofollow"]},"children":[{"type":"text","value":"github"}]},{"type":"text","value":", play with the site on "},{"type":"element","tagName":"a","properties":{"href":"https://rails-progressive-enhancement.herokuapp.com/","target":"_blank","rel":["nofollow"]},"children":[{"type":"text","value":"heroku"}]},{"type":"text","value":" (toggle “Disable JavaScript” in devtools to see both versions)."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A final word of caution: just because all this is possible and looks simple, doesn’t necessarily mean you should be doing it. Supporting PE adds more work and complexity. I personally think this is worth exploring, but it may turn out to be a terrible idea. Stay critical."}]}],"data":{"quirksMode":false}},"tableOfContents":"<ul>\n<li>\n<p><a href=\"/blog/progressive-enhancement-in-rails/#system-tests\">System tests</a></p>\n<ul>\n<li><a href=\"/blog/progressive-enhancement-in-rails/#headless-chrome\">Headless Chrome</a></li>\n<li><a href=\"/blog/progressive-enhancement-in-rails/#rack-test\">Rack test</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/blog/progressive-enhancement-in-rails/#dealing-with-javascript\">Dealing with JavaScript</a></p>\n<ul>\n<li><a href=\"/blog/progressive-enhancement-in-rails/#opting-out-of-rack-test\">Opting out of rack test</a></li>\n<li><a href=\"/blog/progressive-enhancement-in-rails/#changing-test-code-to-support-both-versions\">Changing test code to support both versions</a></li>\n<li><a href=\"/blog/progressive-enhancement-in-rails/#progressive-enhancement-views\">Progressive enhancement (views)</a></li>\n<li>\n<p><a href=\"/blog/progressive-enhancement-in-rails/#progressive-enhancement-controllers\">Progressive enhancement (controllers)</a></p>\n<ul>\n<li><a href=\"/blog/progressive-enhancement-in-rails/#take-two-stimulus\">Take two: Stimulus</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/blog/progressive-enhancement-in-rails/#conclusion\">Conclusion</a></li>\n</ul>","fields":{"slug":"/blog/progressive-enhancement-in-rails/","readingTime":{"text":"15 min read"}},"frontmatter":{"date":"March 15, 2020","title":"Progressive Enhancement in Rails: why and how","subtitles":null,"author":"Artem Avetisyan","short_description":"Why progressive enhancement is a good idea, ways to do it and how to test it.","hidden":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blog/progressive-enhancement-in-rails/","prev":{"fileAbsolutePath":"/home/artem/projects/featurist-site-2019/src/data/blog/turbo-and-fast-system-tests/index.md","fields":{"slug":"/blog/turbo-and-fast-system-tests/"},"frontmatter":{"title":"Turbo and fast system tests"}},"next":{"fileAbsolutePath":"/home/artem/projects/featurist-site-2019/src/data/blog/file-links-in-terminal/index.md","fields":{"slug":"/blog/file-links-in-terminal/"},"frontmatter":{"title":"File Links in the Terminal"}}}}}